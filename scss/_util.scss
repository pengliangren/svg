//@function svg-url($svg){
//  @return url("data:image/svg+xml;charset=utf8,#{$svg}");
//}

//spacing
$grid: 4px;//一格
$box-large-gap: 3 * $grid;//大一点的间隙
$box-small-gap: 2 * $grid;//小间隙

//色彩 Color
//主色调
$black: #000;       //主导航图标 系统图标 标题 正文
$gray1: #646464;   //管理图标
$gray: #969696;     //辅助信息
$gray2: #aaa;      //主导航图标
$gray3: #bebebe;   //文字禁用态
$gray4: #e6e6e6;   //搜索框 分割线
$gray5: #f5f5f5;   //背景色
$white: #fff;       //卡片

//辅助色
$blue: #1d82ff;     //控件 文字链 工具类
$green: #46c800;    //完成态 系统类
$orange: #f3b200;   //高亮提示 优惠券
$red: #fe5c46;      //警示提示 娱乐类
$darkgray: #bebebe;
$middlegray: #e6e6e6;
$lightgray: #f5f5f5;


//function
@function px($px) {
  @return $px/12*$grid;
}

@function grid($num) {
  @return $num*$grid;
}

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
        str-replace(str-slice($string, $index +
        str-length($search)), $search, $replace);
  }
  @return $string;
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function str-last-index($string, $needle) {
  $index: str-index($string, $needle);
  $result: $index;

  @if $index {
    @for $i from $index + str-length($needle) through str-length($string) {
      @if str-slice($string, $i, $i + str-length($needle) - 1) == $needle {
        $result: $i;
      }
    }
  }

  @return $result;
}

//内联SVG函数
@function svg-url($svg){
  $encoded: '';

  $is-br: 0;//换行标志位
  @for $i from 1 through str-length($svg)  {
    $l: str-slice($svg, $i, $i);
    @if $l == "\A" or $l == "\D" {//换行
      @if $is-br == 0 { $is-br: $i; $encoded: $encoded + "%20"; }
    }
    @else if $l == " " {
      @if $is-br == 0 { $encoded: $encoded + "%20"; }
    }
    @else {
      $is-br: 0;
      @if $l == "\"" { $encoded: $encoded + "'"; }
      @else if $l == "<" { $encoded: $encoded + "%3C"; }
      @else if $l == ">" { $encoded: $encoded + "%3E"; }
      @else if $l == "&" { $encoded: $encoded + "%26"; }
      @else if $l == "#" { $encoded: $encoded + "%23"; }
      @else { $encoded: $encoded + $l; }
    }
  }

  //$encoded:'';
  //$slice: 2000;
  //$index: 0;
  //$loops: ceil(str-length($svg)/$slice);
  //@for $i from 1 through $loops {
  //    $chunk: str-slice($svg, $index, $index + $slice - 1);
  //    $chunk: str-replace($chunk,'"','\'');
  //    $chunk: str-replace($chunk,'<','%3C');
  //    $chunk: str-replace($chunk,'>','%3E');
  //    $chunk: str-replace($chunk,'&','%26');
  //    $chunk: str-replace($chunk,'#','%23');
  //    $chunk: str-replace($chunk,' ','%20');//空格
  //    $encoded: #{$encoded}#{$chunk};
  //    $index: $index + $slice;
  //}
  @return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}

@function svg-rectangle($color: $blue, $radius: '2', $strokeWidth: '1', $width: '100%', $height: '100%') {
  @return svg-url('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><clipPath id="clip"><rect rx="#{$radius}" ry="#{$radius}" width="100%" height="100%"/></clipPath></defs><rect width="100%" height="100%" rx="#{$radius}" ry="#{$radius}" fill="none" stroke="#{$color}" stroke-width="#{$strokeWidth}" clip-path="url(#clip)"/></svg>');
}

@function svg-line($color: $middlegray, $width: '100%', $height: '0.5', $y: '0') {
  @return svg-url('<svg xmlns="http://www.w3.org/2000/svg"><rect y="#{$y}" width="#{$width}" height="#{$height}" fill="#{$color}"/></svg>');
}



//mixin
@mixin ellipsis-more($num: 2) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $num;
}
@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
@mixin ellipsis-two {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
@mixin clearfix {
  &:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    overflow: hidden;
  }
}
@mixin text16 {
  line-height: grid(6);
  font-size: grid(4);
}
@mixin text14 {
  line-height: grid(5.5);
  font-size: grid(3.5);
}
@mixin text12 {
  line-height: grid(4.5);
  font-size: grid(3);
}
@mixin text10 {
  line-height: grid(3.5);
  font-size: grid(2.5);
  color: #969696;
}

//无框文字辅助
@mixin text48($top:0, $right:$top, $bottom:$top, $left:$right) {
  line-height: grid(6);
  font-size: grid(4);
  margin: (-(grid(6) - grid(4))/2 + grid($top))
  grid($right)
          (-(grid(6) - grid(4))/2 + grid($bottom))
  grid($left);
  -webkit-margin-collapse: separate;
  margin-collapse: separate;
}
@mixin text42($top:0, $right:$top, $bottom:$top, $left:$right) {
  line-height: grid(5.5);
  font-size: grid(3.5);
  margin: (-(grid(5.5) - grid(3.5))/2 + grid($top))
  grid($right)
          (-(grid(5.5) - grid(3.5))/2 + grid($bottom))
  grid($left);
  -webkit-margin-collapse: separate;
  margin-collapse: separate;
}
@mixin text36($top:0, $right:$top, $bottom:$top, $left:$right) {
  line-height: grid(4.5);
  font-size: grid(3);
  margin: (-(grid(4.5) - grid(3))/2 + grid($top))
  grid($right)
          (-(grid(4.5) - grid(3))/2 + grid($bottom))
  grid($left);
  -webkit-margin-collapse: separate;
  margin-collapse: separate;
}
@mixin text30($top:0, $right:$top, $bottom:$top, $left:$right) {
  line-height: grid(3.5);
  font-size: grid(2.5);
  color: #969696;
  margin: (-(grid(3.5) - grid(2.5))/2 + grid($top))
  grid($right)
          (-(grid(3.5) - grid(2.5))/2 + grid($bottom))
  grid($left);
  -webkit-margin-collapse: separate;
  margin-collapse: separate;
}

//无框文字
@mixin text($value) {
  $font-size: map-get($value, "font-size");
  $font-size: grid(1) !default;
  $line-height: map-get($value, "line-height");
  $line-height: 1 !default;
  $minus: $font-size *.25;
  $margin: map-get($value, "margin");
  $padding: map-get($value, "padding");

  @if $margin and $padding {//TODO
  }
  @else if $margin {
    $length: length($margin);

    @if $line-height/$font-size >= 1.5 {
      line-height: $line-height;
      margin: $margin;
    }
    @else if $length >= 4 {
      line-height: 1.5em;
      margin: (nth($margin, 1) - $minus) nth($margin, 2) (nth($margin, 3) - $minus) nth($margin, 4);
    }
    @else if $length >= 3 {
      line-height: 1.5em;
      margin: (nth($margin, 1) - $minus) nth($margin, 2) (nth($margin, 3) - $minus);
    }
    @else if $length >= 2 {
      line-height: 1.5em;
      margin: (nth($margin, 1) - $minus) nth($margin, 2);
    }
    @else if $length >= 1 {
      line-height: 1.5em;
      margin: (nth($margin, 1) - $minus) nth($margin, 1);
    }
    -webkit-margin-collapse: separate;
    margin-collapse: separate;
  }
  @else if $padding {
    $length: length($padding);
    line-height: $line-height;

    @if $length >= 4 {
      $top: nth($padding, 1) - $minus;
      $bottom: nth($padding, 3) - $minus;
      @if strip-unit($top) < 0 and strip-unit($bottom) < 0 {
        margin: $top 0 $bottom;
        padding: 0 nth($padding, 2) 0 nth($padding, 4);
      }
      @else if strip-unit($top) < 0 {
        margin: $top 0 0;
        padding: 0 nth($padding, 2) $bottom nth($padding, 4);
      }
      @else if strip-unit($bottom) < 0 {
        margin: 0 0 $bottom;
        padding: $top nth($padding, 2) 0 nth($padding, 4);
      }
    }
    @else if $length >= 3 {
      $top: nth($padding, 1) - $minus;
      $bottom: nth($padding, 3) - $minus;
      @if strip-unit($top) < 0 and strip-unit($bottom) < 0 {
        margin: $top 0 $bottom;
        padding: 0 nth($padding, 2) 0;
      }
      @else if strip-unit($top) < 0 {
        margin: $top 0 0;
        padding: 0 nth($padding, 2) $bottom;
      }
      @else if strip-unit($bottom) < 0 {
        margin: 0 0 $bottom;
        padding: $top nth($padding, 2) 0;
      }
    }
    @else if $length >= 2 {
      $top: nth($padding, 1) - $minus;
      @if strip-unit($top) < 0 {
        margin: $top 0;
        padding: 0 nth($padding, 2);
      }
      @else {
        padding: $top nth($padding, 2);
      }
    }
    @else if $length >= 1 {
      $top: nth($padding, 1) - $minus;
      @if strip-unit($top) < 0 {
        margin: $top;
        padding: 0;
      }
      @else {
        padding: $top;
      }
    }
  }
  @else {
    line-height: $line-height;
  }

  @if $font-size {
    font-size: $font-size;
  }
}


//全局帧动画辅助
$animation: ();
@mixin status($content) {
  @each $selector in & {
    $key: ();
    $frame: 0%;
    @each $item in $selector {
      @if(str-slice($item, str-length($item)) == '%') {
        $frame: $item;
      }
      @else {
        $key: append($key, $item);
      }
    }
    $item: map-get($animation, #{$key});
    @if(not $item) {
      $item: (#{$frame}: $content)
    }
    @else {
      $item: map-merge($item, (#{$frame}: $content))
    }
    $animation: map-merge($animation, (#{$key}: $item));
    $animation: $animation !global;
    //content: #{$animation};
  }
}

@mixin animate($anime) {
  //content: "#{$animation}";
  @each $selector in map-keys($animation){
    $name: str-replace(
                    str-replace(
                                    str-replace(
                                                    str-replace(
                                                                    str-replace(
                                                                                    str-replace(
                                                                                                    str-replace(
                                                                                                                    $selector, '#', '-'
                                                                                                    ), ')', '-'
                                                                                    ), '(', '-'
                                                                    ), ':', '-'
                                                    ), ',', '-'
                                    ), '.', '-'
                    ), ' ', '-'
    );
    $keyframes: map-get($animation, $selector);
    @keyframes #{$name} {
      @each $percentage in map-keys($keyframes){
        #{$percentage} {
          $keyframe: map-get($keyframes, $percentage);
          @each $key in map-keys($keyframe) {
            #{$key}: map-get($keyframe, $key);
          }
        }
      }
    }
    @at-root #{$selector} {
      animation: #{$name} #{$anime};
    }
  }
}

@mixin box {
  padding: grid(3);
  margin: 8px 0;
  background-color: #fff;
}

@mixin mod-ellipsis(
  $c,
  $w: 100px,//...更多容器的宽
  $h: 40px,//行高
  $n: 2,//截断行数
  $f: 20px,//字号
  $m: 80px//最大高
) {
  @at-root #{$c} {
    & {
      max-height: $m;
      .mod-ellipsis {
        &-container {
          -webkit-line-clamp: $n;
          line-height: $h;
          font-size: ($w+$f/2);
        }
        &-content {
          font-size: $f;
        }
        &-placeholder {
          height: $m;
        }
        &-ellipsis {
          font-size: $f;
          width: $w;
          margin-left: (1px-$w);
          margin-top: -$h;
          height: $h;
        }
        &-after {
          height: $h;
        }
      }
    }
  }
}


//placeholder
%text16 {
  line-height: grid(6);
  font-size: grid(4);
}
%text14 {
  line-height: grid(5.5);
  font-size: grid(3.5);
}
%text12 {
  line-height: grid(4.5);
  font-size: grid(3);
}
%text10 {
  line-height: grid(3.5);
  font-size: grid(2.5);
  color: #969696;
}
%ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
%ellipsis-two {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

// layout 布局
%flexbox {
  display: -webkit-box;
  -webkit-box-pack: justify;
}

%clearfix {
  &:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    overflow: hidden;
  }
}

%half-border-bottom {
  position: relative;
  &:after {
    position: absolute;
    display: block;
    content: "";
    width: 100%;
    height: 1px;
    left: 0;
    bottom: 0;
    background: svg-line($middlegray, '100%', '0.5', '0.5');
    background-repeat: no-repeat;
    background-size: 100% auto;
  }
}

%half-border-top {
  position: relative;
  &:before {
    position: absolute;
    display: block;
    content: "";
    width: 100%;
    height: 1px;
    left: 0;
    top: 0;
    background: svg-line();
    background-repeat: no-repeat;
    background-size: 100% auto;
  }
}

%absolute-img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

%box {
  padding: 12px;
  margin: 8px 0;
  background-color: #fff;
}
